$(document).on('turbolinks:load', function() {
  if ($('form').length > 0) {
    //initFormValidations();
  }

  if ($('#problem-form').length > 0) {
    initNewProblemForm();
	}

  // error icon node
	const errorIcon = document.createElement("span");
	errorIcon.className = 'fa fa-exclamation-circle input-error';

  // Error msg node
  const errorMsg = document.createElement("span");
	errorMsg.className = "input-error-msg";
	let errorText = "Invalid input";
	errorMsg.textContent = errorText;

  function addInputError(input) {
    if ($(input).hasClass('taggle_input')) {
      $('#tags-input-container').addClass('has-error');
    } else {
      $(input).addClass('has-error');
    }
	  $(input).closest('.input-container').append(errorIcon);
  }

  function addInputErrorMsg(input, errorText) {
    errorMsg.textContent = errorText;
    $(input).closest('.form-group').append(errorMsg);
  }

  
	/* ---------------------------------------------------
	 New Problem Form
	 -----------------------------------------------------*/

  function initNewProblemForm() {

    // CONSTANTS

		titleContent = `
			  <h2>Write a title that summarizes the problem</h2>	
				<p>The title is the first thing that users will see. It should help them quickly understand what the problem is about.</p>
        <div class='light-grey-card'>
          <h4 class='bodyFont'>
            Here are some tips for making a good title:
          </h4>
 
          <ul>
            <li>
              If the theorem has a name make that your title. Sum up your entire 
              problem in one sentence. Include details that will help people identify 
              and solve your problem. Include any constraints or variants to your 
              problem that make it different from similar problems already on the site. 
            </li>
            <li>
              Spelling, grammar and punctuation are important! Make sure you proof-read 
              it or have someone proof-read it for you if your english is not good.
            </li>
            <li>
              Write the title last if you are having trouble summarizing the problem. 
              Sometimes writing the problem first can make it easier for you to 
              describe the problem.
            </li>
          </ul>
        </div>
    `;

		tagsContent = `
		  <h2> What is your problem about? </h2>
      <p>
			  Topics are a way of connecting users with problems they are 
			  interested in by sorting problems into specific, well-defined 
				categories. Choose at least one and up to five tags.
			</p>
		`;

    problemContent = `
      <h2>What do you want to prove?</h2>
      <p>
        Make sure your problem is not a duplicate and is different from 
        the rest. <a href='#' class='bodyLink'>Search</a>, research and keep track of what you find. 
        You can link to similar problems so that others can better 
        understand your question and make sure it is not repeated.
      </p>
      <div class='light-grey-card'>
        <h4 class='bodyFont'>
          Make sure the problem is a theorem or that it 
          asks to prove a mathematical statement
        </h4>
 
        <ul>
          <p>
            If the theorem has a name make that your title. Sum up your entire 
            problem in one sentence. Include details that will help people identify 
            and solve your problem. Include any constraints or variants to your 
            problem that make it different from similar problems already on the site. 
          <p>
        </ul>
      </div>
      `;

    $li = $(".multi-step-bar li[data-open='true']");

    initNewProblemFormValidations();
	  initNewProblemFormGeneral();
    initProblemTags();
	}


  /* -----------------------------------------------------------
	  Validations
		-------------------------------------------------------------*/

  function initFormValidations() { 
	  const $form  = $('.validate-form');

    if ($('#problem-form').length > 0) {
      $('#problem-form').on('input', '.form-input-validate', function(event) {
        let $input = $(this);
        let minLength = 10;
        if ($(this).data('field') == "problem-content") {
          $input = $(this).closest('.form-group').find('#problem_content');
          minLength = 20;
        }
        if ($input[0].validity.valid) {
          if ($input[0].value.trim().replace(/\s+/g, " ").length >= minLength) {
            document.querySelector('.form-nav .btn-next').removeAttribute('disabled');
          } else {
            document.querySelector('.form-nav .btn-next').setAttribute('disabled', true);
          }
        } else {
          document.querySelector('.form-nav .btn-next').setAttribute('disabled', true);
        }
      });
    }

    $form.on('input', '.form-input-validate', function(event) {
      if ($(this)[0].validity.valid) {
        if ($(this).closest('form').attr('id') == 'problem-form') {
          if ($(this).data('field') == "title") {
            if ($(this)[0].value.trim().replace(/\s+/g, " ").length >= 10) {
              document.querySelector('.form-nav .btn-next').removeAttribute('disabled');
            } else {
              document.querySelector('.form-nav .btn-next').setAttribute('disabled', true);
            }
          }
        }
      } else {
        if ($(this).closest('form').attr('id') == 'problem-form') {
          document.querySelector('.form-nav .btn-next').setAttribute('disabled', true);
        }
      }
    });

    $form.on('blur', '.form-input-validate', function() {
      if ($(this)[0].validity.valid) {
        if ($(this).closest('form').attr('id') == 'problem-form') {
          if ($(this).data('field') == "title") {
            if ($(this).val().length > 0 && $(this)[0].value.trim().replace(/\s+/g, " ").length < 10) {
              errorText = "Title must be at least 10 characters";
              addInputError(this);
              addInputErrorMsg(this, errorText);
            }
          }
        }

      } else {
        if ($(this).val().length > 0) {
          addInputError(this);
          if ($(this)[0].validity.tooShort) {
            errorText = "Title must be at least 10 characters";
          } else if ($(this)[0].validity.tooLong) {
            errorText = "Title can't be longer that 255 characters";
          }
          addInputError(this);
          addInputErrorMsg(this, errorText);
        }
      } 
    });

    $form.on('focus', '.form-input-validate', function(event) {
      if ($(this).hasClass('taggle_input')) {
        if ($('#tags-input-container').hasClass('has-error')) {
          $('#tags-input-container').removeClass('has-error');
          $('#tags-input-container').find('.input-error').remove();
          $(this).closest('.form-group').find('.input-error-msg').remove();
        }
      } else {
        $(this).removeClass('has-error');
			  if ($(this).next('.input-error').length > 0) {
          $(this).next('.input-error').remove();
          $(this).closest('.form-group').find('.input-error-msg').remove();
			  }
      }
		});

    $form.on('keydown', '.form-input-validate', function(e) {
      var keyCode = e.keyCode || e.which;
      if (keyCode === 13) {
        if ($(this).closest('form').attr('id') == 'problem-form') {
          if ($(this).data('field') == "title") {
            e.preventDefault();
            if (!$('.form-nav .btn-next').attr('disabled')) {
			        $li.attr('data-open', false);
				      $li = $li.next('li');
              $li.addClass('active').attr('data-open', true);
				      $(".form-nav span[data-nav='previous']").removeClass('hide').addClass('show');

              updateForm($li);
		        } else {
              $(this).blur();
              addInputError(this);
              if ($(this)[0].validity.tooShort) {
                errorText = "Title must be at least 10 characters";
              } else if ($(this)[0].validity.tooLong) {
                errorText = "Title can't be longer that 255 characters";
              } else if ($(this)[0].validity.valueMissing) {
                errorText = "Title is missing";
              }
              addInputError(this);
              addInputErrorMsg(this, errorText);
            }
          }
        }             
        return false;  
      }
    });
  }

  function initNewProblemFormValidations() {
    const $form  = $('#problem-form');

    // When user is typing, check if input is valid. If it is not, disbale 
    // .next-btn, enable otherwise
    $('#problem-form').on('input', '.form-input-validate', function(event) {
      console.log('wtf');
      let $input = $(this);
      let minLength = 10;

      if ($(this).data('field') == "problem-content") {
        $input = $(this).closest('.form-group').find('#problem_content');
        minLength = 20;
        console.log('here');
      }

      if ($input[0].validity.valid) {
        if ($input.attr("minlength")) {
          if ($input[0].value.trim().replace(/\s+/g, " ").length >= minLength) {
            document.querySelector('.form-nav .btn-next').removeAttribute('disabled');
          } else {
            document.querySelector('.form-nav .btn-next').setAttribute('disabled', true);
          }
        }
      } else {
        document.querySelector('.form-nav .btn-next').setAttribute('disabled', true);
      }
    });

    // When input is blurred and its value is not empty, validate field.
    $form.on('blur', '.form-input-validate', function() {
      let $input = $(this);
      let minLength = 10;
      let maxLength = 255;

      if ($(this).data('field') == "problem-content") {
        $input = $(this).closest('.form-group').find('#problem_content');
        minLength = 20;
        maxLength = 5000;
      }

      if ($input.val().length > 0) {
        if ($input[0].validity.valid) {
          if ($input.attr("minlength") && $input.val().length > 0 && $input[0].value.trim().replace(/\s+/g, " ").length < minLength) {
              errorText = $li.text() + " must be at least " + minLength + " characters";
              addInputError($input[0]);
              addInputErrorMsg($input[0], errorText);
          }
        } else {
          addInputError($input[0]);
          if ($input[0].validity.tooShort) {
            errorText = $li.text() + " must be at least " + minLength + " characters";
          } else if ($(this)[0].validity.tooLong) {
            errorText = $li.text() + " must be at least " + minLength + " characters";
          }

          addInputError($input[0]);
          addInputErrorMsg($input[0], errorText);
        }
      }
    });

    $form.on('focus', '.form-input-validate', function(event) {
      if ($(this).hasClass('taggle_input')) {
        if ($('#tags-input-container').hasClass('has-error')) {
          $('#tags-input-container').removeClass('has-error');
          $('#tags-input-container').find('.input-error').remove();
          $(this).closest('.form-group').find('.input-error-msg').remove();
        }
      } else {
        $(this).removeClass('has-error');
			  if ($(this).next('.input-error').length > 0) {
          $(this).next('.input-error').remove();
          $(this).closest('.form-group').find('.input-error-msg').remove();
			  }
      }
		});

    $form.on('keydown', '.form-input-validate', function(e) {
      var keyCode = e.keyCode || e.which;
      if (keyCode === 13) {
        if ($(this).data('field') == "title") {
          e.preventDefault();
          if (!$('.form-nav .btn-next').attr('disabled')) {
			      $li.attr('data-open', false);
				    $li = $li.next('li');
            $li.addClass('active').attr('data-open', true);
				    $(".form-nav span[data-nav='previous']").removeClass('hide').addClass('show');

            updateForm($li);
		      } else {
            $(this).blur();
            addInputError(this);
            if ($(this)[0].validity.tooShort) {
              errorText = "Title must be at least 10 characters";
            } else if ($(this)[0].validity.tooLong) {
              errorText = "Title can't be longer that 255 characters";
            } else if ($(this)[0].validity.valueMissing) {
              errorText = "Title is missing";
            }
            addInputError(this);
            addInputErrorMsg(this, errorText);
          }
        }            
        return false;  
      }
    });
  }



  /* -----------------------------------------------------------------
	  General
		---------------------------------------------------------------------*/

  function initNewProblemFormGeneral() {

    		
    //var $li = $(".multi-step-bar li[data-open='true']");
	
    if ($li.text() == "Title") {
      $(".form-nav span[data-nav='previous']").addClass('hide');
    }

    // Click on next
    $('.form-nav').on('click', '.btn-next', function() {
      if ($(this).attr('disabled')) {
        
      } else {
			  $li.attr('data-open', false);
				$li = $li.next('li');
        $li.addClass('active').attr('data-open', true);
				$(".form-nav span[data-nav='previous']").removeClass('hide').addClass('show');

        updateNextButton();
        updateForm($li);
			}
    });

    // Click on previous
    $('.form-nav').on('click', "span[data-nav='previous']", function() {
      $li.attr('data-open', false).removeClass('active');
			$li = $li.prev('li');
      $li.attr('data-open', true);
      if ($li.text() == "Title") {
        $(".form-nav span[data-nav='previous']").removeClass('show').addClass('hide');
			}

      updateNextButton();

			updateForm($li);
		});

    // Click on multi-step-bar link
		$(".multi-step-bar").on('click', "li[data-open='false']", function() {
      $li.attr('data-open', false);
      $li = $(this);
			$li.nextAll('li').removeClass('active');
			$li.prevAll('li').addClass('active');
			$li.addClass('active').attr('data-open', true);

      if ($li.text() == "Title") {
        $(".form-nav span[data-nav='previous']").removeClass('show').addClass('hide');
			} else {
        $(".form-nav span[data-nav='previous']").removeClass('hide').addClass('show');
      }

      updateNextButton();
			updateForm($li);
		});
  }

	function initProblemTags() {
    if ($('#tags-input-container').length > 0) {
      const myTaggle = new Taggle('tags-input-container', {
        duplicateTagClass: 'bounce',

        inputFormatter: function(inputElement) {
          $(inputElement).addClass('form-input-validate');
          $(inputElement).attr('data-field', 'tags');
        },

				onBeforeTagAdd: function(event, tag) {
				  if (/^[A-Za-z\d\s]*$/.test(tag)) {
            return true;
					} else {
            let $input = $('#tags-input-container .taggle_input');
            $input.blur();
            addInputError($input[0]);
            errorText = "Tags only support letters, spaces and numbers";
            addInputErrorMsg($input[0], errorText);
					  return false;
					}
				},

				onTagAdd: function(event, tag) {
          if ($('#tags-input-container .taggle_list .taggle').length == 5) {
            $('#tags-input-container .taggle_list .taggle_input').attr('disabled', true);
						$('#tags-input-container').css("cursor", "default !important");
					} else if ($('#tags-input-container .taggle_list .taggle').length == 1) {
            $('.form-nav .btn-next').attr('disabled', false);
					}
				},

				onTagRemove: function(event, tag) {
          if ($('#tags-input-container .taggle_list .taggle').length == 4) {
            $('#tags-input-container .taggle_list .taggle_input').attr('disabled', false);
						$('#tags-input-container').css("cursor", "text");
					} else if ($('#tags-input-container .taggle_list .taggle').length == 0) {
            $('.form-nav .btn-next').attr('disabled', true);
          }
				}
      });

      
      $('#tags-input-container .taggle_input').autocomplete({ 
        source: function( request, response ) {
          $.ajax({
            type: "GET",
            url: "/topics/search",
            data: {
              query: request.term
            },
            success: function(data) {
              response(data.suggestions);
            }
          });
        },
        appendTo: myTaggle.getContainer(),
        select: function(event, data) {
          event.preventDefault();
          //Add the tag if user clicks
          if (event.which === 1) {
            myTaggle.add(data.item.value);
          }
        },
        open: function() {
          let containerOffset = $('#tags-input-container').offset();
          let containerHeight = $('#tags-input-container').height();

          let left = containerOffset.left, top = containerOffset.top;
          $(".ui-menu").css({ left: 0 + "px",
                                top: containerHeight + 5 + "px",
                                width: "100%" });

        }
      })
      .data("ui-autocomplete")._renderItem = function( ul, item ) {
          return $("<li>")
					  .append("<span class='font-weight-600 g-ml-5 topic-label'>" + item.label.toLowerCase() + " <span style='color: rgba(0,0,0,0.64); font-weight: 500;'>(" + item.cached_problems_count + ")</span>")
					  .appendTo ( ul );
      };
    }
	}

  function updateForm($li) {
		$('.form-group').removeClass('show');
    if ($li.text() == "Title") {
      $('.problem-form-container').removeClass('trix-form-container');
      $('.problem-form-wrapper .step-meta').html(titleContent);
		  $('.title-form-group').addClass('show');
		} else if ($li.text() == "Tags") {
      $('.problem-form-container').removeClass('trix-form-container');
      $('.problem-form-wrapper .step-meta').html(tagsContent);
      $('.tags-form-group').addClass('show');
  	} else if ($li.text() == "Problem") {
      $('.problem-form-container').addClass('trix-form-container');
      $('.problem-form-wrapper .step-meta').html(problemContent);
      $('.problem-content-form-group').addClass('show');
    }
	}


  function readyForNextStep() {
    let step = $li.text()
    let $input = $('#problem-form .form-input-validate');

    if (step == "Tags") {
      if ($('#tags-input-container .taggle').length > 0) {
        return true;
      } else {
        return false;
      }
    } else if ($input[0].validity.valid) {
      if (step == "Title") {
        if ($input[0].value.trim().replace(/\s+/g, " ").length >= 10)  {
          return true;
        } else {
          return false;
        }
      } else {
        return true;
      }
    } else {
      return false;
    }
  }

  function updateNextButton() {
    if (readyForNextStep()) {
      document.querySelector('.form-nav .btn-next').removeAttribute('disabled');
    } else {
      document.querySelector('.form-nav .btn-next').setAttribute('disabled', true);
    }
  }

});
